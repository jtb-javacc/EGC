compileJjtree {
	language 'Cpp'
    include '*.cc'
    include '*.h'
    inputDirectory  = new File(projectDir, 'jjt')
    outputDirectory = new File(projectDir, 'gen')
//    arguments = [grammar_encoding: 'UTF-8', static: 'false']
}
compileJavacc {
	inputDirectory 	compileJjtree.outputDirectory
	outputDirectory	compileJjtree.outputDirectory
}

model {
    components { 
        EG3(NativeExecutableSpec) {
			sources {
				generated(CppSourceSet) {
					source {
						srcDir compileJjtree.outputDirectory
						include "*.cc"
					}
					exportedHeaders {
						srcDir compileJjtree.outputDirectory
						srcDir compileJjtree.inputDirectory
					}
			   }
			   cpp {
					source {
						srcDir new File(projectDir, 'jjt')
						include "*.cpp"
						include "*.cc"
					}
					lib sources.generated
				}
			}
        }
    }
}
